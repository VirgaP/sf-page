security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt
        Symfony\Component\Security\Core\User\User: bcrypt
    providers:
        chain_provider:
            chain:
                providers: [in_memory, db_users]
        in_memory:
            memory:
                users:
                    super_admin:
                        password: $2y$12$Fpol3Z6RDpAzvOFkwzoi8eCWN7zGCP11HQ6oR1n8P96dRBbRCBLn.
                        roles: 'ROLE_SUPER_ADMIN'
        db_users:
             entity:
                class: App\Entity\User
                property: email
    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        ROLE_USER:        ROLE_USER

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            provider: chain_provider
            form_login:
                login_path: login
                check_path: login
                use_referer: true
                failure_path: login
#                csrf_token_generator: security.csrf.token_manager
#                username_parameter: login[username]
#                password_parameter: login[password]
            logout:
                path: /logout
                target: /
            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/admin, roles: ROLE_ADMIN }
         - { path: ^/vartotojas, roles: ROLE_ADMIN }

